from fastapi import APIRouter, Query, Response, Request, Body, Depends, File, Form, UploadFile, Path
from typing import Optional, List
from .schema import *
from .examples import create_examples, bulk_create_example, create_index_examples
from fastapi.security import HTTPBasic, HTTPBasicCredentials

api = APIRouter()


@api.post("/{index}/_doc/{_id}",
          status_code=200,
          responses={
              200: {
                  "description": "Success",
                  "content": {
                      "application/json": {
                          "examples": {
                              "JSON Response(Created)": {
                                  "summary": "JSON Response(Created)",
                                  "value": {
                                      "_index": "country",
                                      "_type": "_doc",
                                      "_id": "1",
                                      "_version": 1,
                                      "result": "created",
                                      "_shards": {
                                          "total": 1,
                                          "successful": 1,
                                          "failed": 0
                                      },
                                      "_seq_no": 0,
                                      "_primary_term": 1
                                  }
                              },
                              "JSON Response(Updated)": {
                                  "summary": "JSON Response(Updated)",
                                  "value": {
                                      "_index": "country",
                                      "_type": "_doc",
                                      "_id": "1",
                                      "_version": 2,
                                      "result": "updated",
                                      "_shards": {
                                          "total": 1,
                                          "successful": 1,
                                          "failed": 0
                                      },
                                      "_seq_no": 5,
                                      "_primary_term": 1
                                  }
                              }
                          }
                      }
                  }
              },
          })
def create_document_with_id(index: str = Path(default="country", example="country"),
                            _id: str = Path (default="123456", example="123456"),
                            request: country_model = Body(
                                ..., examples=create_examples)):
    """
        Store a document into elasticsearch while specifying an `_id` for the record.\n
        If the index to store the document does not already exist it will be created 
        with the default settings and mapping parameters applied. \n
        If the index and `_id` already exist then the document will be replaced. \n 
        Please see how the sample response differs (i.e. the `result` and `_version` fields)
        """
    return _id


@api.post("/{index}/_doc",
          status_code=201,
          responses={
              201: {
                  "description": "Success",
                  "content": {
                      "application/json": {
                          "examples": {
                              "JSON Response": {
                                  "summary": "JSON Response",
                                  "value": {
                                      "_index": "country",
                                      "_type": "_doc",
                                      "_id": "SoK49XsBc-WDXl5oTbQG",
                                      "_version": 1,
                                      "result": "created",
                                      "_shards": {
                                          "total": 1,
                                          "successful": 1,
                                          "failed": 0
                                      },
                                      "_seq_no": 6,
                                      "_primary_term": 1
                                  }
                              }
                          }
                      }
                  }
              },
          })
def create_document_without_id(index: str = Path (default="country", example="country"),
pipeline: str = Query (None), 
                               request: country_model = Body(
                                   ..., examples=create_examples)):
    """
        Store a document into elasticsearch, the `_id` for the record will be 
        generated by elasticsearch. \n
        If the index to store the document does not already exist it will be created 
        with the default settings and mappings. \n
        The pipeline query string parameter identifies a series of `processesors` that should be applied to the document before indexing. For example appending in the index datetime to the source document. Pipelines are created using the `_ingest/pipeline` endpoints. \n\n
        The HTTP response code is 201 for this request. 
    """
    return {}


# @api.post("/_bulk",
#           status_code=201,
#           openapi_extra={
#               "requestBody": {
#                   "content": {
#                       "application/x-ndjson": {
#                           "schema": File
#                       }
#                   },
#                   "required": True,
#               },
#           })
# def create_documents_in_bulk( document_gzip: Optional[bytes] = File(None) ):
#     """
#          Store a document into elasticsearch, the _id for the record will be generated by elasticsearch. \n
#          If the index to store the document does not already exist it will be created
#          with the default storage and indexing parameters. The HTTP response code is 201 for this request.
#      """
#     return {}
