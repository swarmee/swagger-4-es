{
    "openapi": "3.0.2",
    "info": {
        "title": "Elasticsearch Basics",
        "description": "This Swagger page runs throught the basic Elasticsearch API end points.It is intended to be used as a teaching mechanism for anybody looking to pick upsome elasticsearch knowledge. The Swagger page runs through a couple of the keycluster management end points as well as all the basic `CRUD` operations.\nSample payloads have been provided for each end point to assist in the learning processing.\n##### Every CRUD end point requires that you specify an index name as a path parameter.\n",
        "version": "1.0"
    },
    "servers": [{
        "url": "https://localhost:443",
    }],
    "paths": {
        "/_cat/indices": {
            "get": {
                "tags": [
                    "🎊 Cluster Basics"
                ],
                "summary": "Node Details",
                "description": "List indices and their state. This is one of the `cat` end points (Compact and aligned text).\n        Which are intended to provide  (CAT) APIsedit\nIntroductionedit\nJSON is great…​ for c\n\n    ",
                "operationId": "node_details__cat_indices_get",
                "parameters": [{
                        "required": false,
                        "schema": {
                            "allOf": [{
                                "$ref": "#/components/schemas/format_types"
                            }],
                            "default": "json"
                        },
                        "name": "format",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Display headings",
                            "type": "boolean",
                            "default": true
                        },
                        "name": "v",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [{
                    "HTTPBasic": []
                }]
            }
        },
        "/_cluster/health": {
            "get": {
                "tags": [
                    "🎊 Cluster Basics"
                ],
                "summary": "Retrieve Cluster Health",
                "description": "Retrieve Cluster Health \n\nIdeally your cluster is green (which means no unreplicated shards)\nYellow means you have some unreplicated shards - if you create an index it may by default have mulitple shards.",
                "operationId": "retrieve_cluster_health__cluster_health_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [{
                    "HTTPBasic": []
                }]
            }
        },
        "/_cat": {
            "get": {
                "tags": [
                    "🎊 Cluster Basics"
                ],
                "summary": "Node Details",
                "description": "List of `cat` end points (Compact and aligned text). \n\nCat end points are intended for humans to read. Noting the majority have a format query parameter\nthat lets you review the data as json. ",
                "operationId": "node_details__cat_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [{
                    "HTTPBasic": []
                }]
            }
        },
        "/{index}/": {
            "get": {
                "tags": [
                    "🎉 Read"
                ],
                "summary": "Retrieve Index",
                "description": "Retrieve an indexes configuration",
                "operationId": "retrieve_index__index___get",
                "parameters": [{
                    "required": true,
                    "schema": {
                        "title": "Index",
                        "type": "string"
                    },
                    "name": "index",
                    "in": "path"
                }],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "HTTPBasic": []
                }]
            },
            "put": {
                "tags": [
                    "🚀 Create"
                ],
                "summary": "Create Index",
                "description": "Store a document into elasticsearch, the _id for the record will be generated by elasticsearch. \n\nIf the index to store the document does not already exist it will be created \nwith the default storage and indexing parameters. The HTTP response code is 201 for this request. ",
                "operationId": "create_index__index___put",
                "parameters": [{
                    "required": true,
                    "schema": {
                        "title": "Index",
                        "type": "string"
                    },
                    "name": "index",
                    "in": "path"
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "Request",
                                "type": "object"
                            },
                            "examples": {
                                "simple_index_creation": {
                                    "summary": "A simple index configuration",
                                    "description": "A **simple** index configuration. In this example we are just setting the number of shards and replicas",
                                    "value": {
                                        "settings": {
                                            "index": {
                                                "number_of_replicas": 0
                                            }
                                        }
                                    }
                                },
                                "complex_index_country": {
                                    "summary": "A more complex index configuration",
                                    "description": "A more `complex` document with many fields of different types",
                                    "value": {
                                        "settings": {
                                            "index": {
                                                "codec": "best_compression",
                                                "number_of_replicas": 0,
                                                "number_of_shards": 1,
                                                "refresh_interval": "30s"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "HTTPBasic": []
                }]
            },
            "delete": {
                "tags": [
                    "🦄 Delete"
                ],
                "summary": "Delete Index",
                "description": "Delete an index (and all documents contained within the index)",
                "operationId": "delete_index__index___delete",
                "parameters": [{
                    "required": true,
                    "schema": {
                        "title": "Index",
                        "type": "string"
                    },
                    "name": "index",
                    "in": "path"
                }],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "HTTPBasic": []
                }]
            }
        },
        "/{index}/_doc/{_id}": {
            "get": {
                "tags": [
                    "🎉 Read"
                ],
                "summary": "Retrieve Document By Id",
                "description": "This end point simply retrieves a document based on the provided **_id**",
                "operationId": "retrieve_document_by_id__index___doc___id__get",
                "parameters": [{
                        "required": true,
                        "schema": {
                            "title": "Index",
                            "type": "string"
                        },
                        "name": "index",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": " Id",
                            "type": "string"
                        },
                        "name": "_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "HTTPBasic": []
                }]
            },
            "post": {
                "tags": [
                    "🚀 Create"
                ],
                "summary": "Create Document With Id",
                "description": "Store a document into elasticsearch while specifying an _id for the record.\n\nIf the index to store the document does not already exist it will be created \nwith the default storage and indexing parameters. The HTTP response code is 201 for this request. ",
                "operationId": "create_document_with_id__index___doc___id__post",
                "parameters": [{
                        "required": true,
                        "schema": {
                            "title": "Index",
                            "type": "string"
                        },
                        "name": "index",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": " Id",
                            "type": "string"
                        },
                        "name": "_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/country_model"
                            },
                            "examples": {
                                "simple_single_country": {
                                    "summary": "A simple document",
                                    "description": "A **simple** document with only a few fields",
                                    "value": {
                                        "name": "Afghanistan",
                                        "alpha2Code": "AF",
                                        "capital": "Kabul",
                                        "region": "Asia",
                                        "subregion": "Southern Asia",
                                        "area": 652230
                                    }
                                },
                                "complex_single_country": {
                                    "summary": "A complex document",
                                    "description": "A `complex` document with many fields of different types",
                                    "value": {
                                        "name": "Afghanistan",
                                        "topLevelDomain": [
                                            ".af"
                                        ],
                                        "alpha2Code": "AF",
                                        "alpha3Code": "AFG",
                                        "callingCodes": [
                                            "93"
                                        ],
                                        "capital": "Kabul",
                                        "altSpellings": [
                                            "AF",
                                            "Afġānistān"
                                        ],
                                        "region": "Asia",
                                        "subregion": "Southern Asia",
                                        "population": 27657145,
                                        "latlng": [
                                            33,
                                            65
                                        ],
                                        "demonym": "Afghan",
                                        "area": 652230,
                                        "gini": 27.8,
                                        "timezones": [
                                            "UTC+04:30"
                                        ],
                                        "borders": [
                                            "IRN",
                                            "PAK",
                                            "TKM",
                                            "UZB",
                                            "TJK",
                                            "CHN"
                                        ],
                                        "nativeName": "افغانستان",
                                        "numericCode": "004",
                                        "currencies": [{
                                            "code": "AFN",
                                            "name": "Afghan afghani",
                                            "symbol": "؋"
                                        }],
                                        "languages": [{
                                                "iso639_1": "ps",
                                                "iso639_2": "pus",
                                                "name": "Pashto",
                                                "nativeName": "پښتو"
                                            },
                                            {
                                                "iso639_1": "uz",
                                                "iso639_2": "uzb",
                                                "name": "Uzbek",
                                                "nativeName": "Oʻzbek"
                                            },
                                            {
                                                "iso639_1": "tk",
                                                "iso639_2": "tuk",
                                                "name": "Turkmen",
                                                "nativeName": "Türkmen"
                                            }
                                        ],
                                        "translations": {
                                            "de": "Afghanistan",
                                            "es": "Afganistán",
                                            "fr": "Afghanistan",
                                            "ja": "アフガニスタン",
                                            "it": "Afghanistan",
                                            "br": "Afeganistão",
                                            "pt": "Afeganistão",
                                            "nl": "Afghanistan",
                                            "hr": "Afganistan",
                                            "fa": "افغانستان"
                                        },
                                        "flag": "https://restcountries.eu/data/afg.svg",
                                        "regionalBlocs": [{
                                            "acronym": "SAARC",
                                            "name": "South Asian Association for Regional Cooperation",
                                            "otherAcronyms": [],
                                            "otherNames": []
                                        }],
                                        "cioc": "AFG"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "HTTPBasic": []
                }]
            },
            "delete": {
                "tags": [
                    "🦄 Delete"
                ],
                "summary": "Delete Document",
                "description": "Delete an individual document based on the document id",
                "operationId": "delete_document__index___doc___id__delete",
                "parameters": [{
                        "required": true,
                        "schema": {
                            "title": "Index",
                            "type": "string"
                        },
                        "name": "index",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": " Id",
                            "type": "string"
                        },
                        "name": "_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "HTTPBasic": []
                }]
            }
        },
        "/{index}/_doc": {
            "post": {
                "tags": [
                    "🚀 Create"
                ],
                "summary": "Create Document Without Id",
                "description": "Store a document into elasticsearch, the _id for the record will be generated by elasticsearch. \n\nIf the index to store the document does not already exist it will be created \nwith the default storage and indexing parameters. The HTTP response code is 201 for this request. ",
                "operationId": "create_document_without_id__index___doc_post",
                "parameters": [{
                    "required": true,
                    "schema": {
                        "title": "Index",
                        "type": "string"
                    },
                    "name": "index",
                    "in": "path"
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/country_model"
                            },
                            "examples": {
                                "simple_single_country": {
                                    "summary": "A simple document",
                                    "description": "A **simple** document with only a few fields",
                                    "value": {
                                        "name": "Afghanistan",
                                        "alpha2Code": "AF",
                                        "capital": "Kabul",
                                        "region": "Asia",
                                        "subregion": "Southern Asia",
                                        "area": 652230
                                    }
                                },
                                "complex_single_country": {
                                    "summary": "A complex document",
                                    "description": "A `complex` document with many fields of different types",
                                    "value": {
                                        "name": "Afghanistan",
                                        "topLevelDomain": [
                                            ".af"
                                        ],
                                        "alpha2Code": "AF",
                                        "alpha3Code": "AFG",
                                        "callingCodes": [
                                            "93"
                                        ],
                                        "capital": "Kabul",
                                        "altSpellings": [
                                            "AF",
                                            "Afġānistān"
                                        ],
                                        "region": "Asia",
                                        "subregion": "Southern Asia",
                                        "population": 27657145,
                                        "latlng": [
                                            33,
                                            65
                                        ],
                                        "demonym": "Afghan",
                                        "area": 652230,
                                        "gini": 27.8,
                                        "timezones": [
                                            "UTC+04:30"
                                        ],
                                        "borders": [
                                            "IRN",
                                            "PAK",
                                            "TKM",
                                            "UZB",
                                            "TJK",
                                            "CHN"
                                        ],
                                        "nativeName": "افغانستان",
                                        "numericCode": "004",
                                        "currencies": [{
                                            "code": "AFN",
                                            "name": "Afghan afghani",
                                            "symbol": "؋"
                                        }],
                                        "languages": [{
                                                "iso639_1": "ps",
                                                "iso639_2": "pus",
                                                "name": "Pashto",
                                                "nativeName": "پښتو"
                                            },
                                            {
                                                "iso639_1": "uz",
                                                "iso639_2": "uzb",
                                                "name": "Uzbek",
                                                "nativeName": "Oʻzbek"
                                            },
                                            {
                                                "iso639_1": "tk",
                                                "iso639_2": "tuk",
                                                "name": "Turkmen",
                                                "nativeName": "Türkmen"
                                            }
                                        ],
                                        "translations": {
                                            "de": "Afghanistan",
                                            "es": "Afganistán",
                                            "fr": "Afghanistan",
                                            "ja": "アフガニスタン",
                                            "it": "Afghanistan",
                                            "br": "Afeganistão",
                                            "pt": "Afeganistão",
                                            "nl": "Afghanistan",
                                            "hr": "Afganistan",
                                            "fa": "افغانستان"
                                        },
                                        "flag": "https://restcountries.eu/data/afg.svg",
                                        "regionalBlocs": [{
                                            "acronym": "SAARC",
                                            "name": "South Asian Association for Regional Cooperation",
                                            "otherAcronyms": [],
                                            "otherNames": []
                                        }],
                                        "cioc": "AFG"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "HTTPBasic": []
                }]
            }
        },
        "/{index}/_bulk": {
            "post": {
                "tags": [
                    "🚀 Create"
                ],
                "summary": "Create Documents In Bulk",
                "description": "Store a document into elasticsearch, the _id for the record will be generated by elasticsearch. \n\nIf the index to store the document does not already exist it will be created \nwith the default storage and indexing parameters. The HTTP response code is 201 for this request. ",
                "operationId": "create_documents_in_bulk__index___bulk_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "Request",
                                "type": "string"
                            },
                            "examples": {
                                "simple_countries": {
                                    "summary": "A List of Complex Countries",
                                    "description": "A `complex` document with many fields of different types",
                                    "value": {
                                        "index": {
                                            "_index": "country",
                                            "_id": 0
                                        }
                                    }
                                },
                                "complex_countries": {
                                    "summary": "A List of Complex Countries",
                                    "description": "A `complex` document with many fields of different types",
                                    "value": "Phone: {phone_number} \n Local: 012-345-6789"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "HTTPBasic": []
                }]
            }
        },
        "/{index}/_search": {
            "post": {
                "tags": [
                    "🎉 Read"
                ],
                "summary": "Search Document",
                "description": "Search for all documents in the specified index. \n\nA number of example query types have been provided. \n\nThis end point can been used to sample some documents when submitted without a body.",
                "operationId": "search_document__index___search_post",
                "parameters": [{
                        "required": true,
                        "schema": {
                            "title": "Index",
                            "type": "string"
                        },
                        "name": "index",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Size",
                            "type": "integer",
                            "default": 10
                        },
                        "name": "size",
                        "in": "query"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/search_model"
                            },
                            "examples": {
                                "query_string_query": {
                                    "summary": "A query string example",
                                    "value": {
                                        "query": {
                                            "query_string": {
                                                "query": "af"
                                            }
                                        }
                                    }
                                },
                                "match_query": {
                                    "summary": "A match query example",
                                    "description": "A **normal** item works correctly.",
                                    "value": {
                                        "query": {
                                            "match": {
                                                "region": "asia"
                                            }
                                        }
                                    }
                                },
                                "range_query": {
                                    "summary": "A range query example",
                                    "description": "Basically return all country documents with an area of greater than or equal to `1`",
                                    "value": {
                                        "query": {
                                            "range": {
                                                "area": {
                                                    "gte": 1
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "HTTPBasic": []
                }]
            }
        },
        "/{index}/_delete_by_query": {
            "post": {
                "tags": [
                    "🦄 Delete"
                ],
                "summary": "Delete By Query",
                "description": "Delete all documents that match a query",
                "operationId": "delete_by_query__index___delete_by_query_post",
                "parameters": [{
                    "required": true,
                    "schema": {
                        "title": "Index",
                        "type": "string"
                    },
                    "name": "index",
                    "in": "path"
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/search_model"
                            },
                            "examples": {
                                "query_string_query": {
                                    "summary": "A query string example",
                                    "value": {
                                        "query": {
                                            "query_string": {
                                                "query": "af"
                                            }
                                        }
                                    }
                                },
                                "match_query": {
                                    "summary": "A match query example",
                                    "description": "A **normal** item works correctly.",
                                    "value": {
                                        "query": {
                                            "match": {
                                                "region": "asia"
                                            }
                                        }
                                    }
                                },
                                "range_query": {
                                    "summary": "A range query example",
                                    "description": "Basically return all country documents with an area of greater than or equal to `1`",
                                    "value": {
                                        "query": {
                                            "range": {
                                                "area": {
                                                    "gte": 1
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "HTTPBasic": []
                }]
            }
        },
        "/{index}/_settings": {
            "put": {
                "tags": [
                    "🥳 Update"
                ],
                "summary": "Update Index Settings",
                "description": "Store a Country Record into OpenSearch and specify _id for the document \n\nPOSTs the document into OpenSearch, the index will be automatically created\nwith the default storage parameters ",
                "operationId": "update_index_settings__index___settings_put",
                "parameters": [{
                    "required": true,
                    "schema": {
                        "title": "Index",
                        "type": "string"
                    },
                    "name": "index",
                    "in": "path"
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "Request",
                                "type": "object"
                            },
                            "examples": {
                                "update_index_setting": {
                                    "summary": "A update to an index setting",
                                    "description": "A **simple** update index setting example",
                                    "value": {
                                        "index": {
                                            "number_of_replicas": 2
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "HTTPBasic": []
                }]
            }
        }
    },
    "components": {
        "schemas": {
            "HTTPValidationError": {
                "title": "HTTPValidationError",
                "type": "object",
                "properties": {
                    "detail": {
                        "title": "Detail",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        }
                    }
                }
            },
            "ValidationError": {
                "title": "ValidationError",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "loc": {
                        "title": "Location",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "msg": {
                        "title": "Message",
                        "type": "string"
                    },
                    "type": {
                        "title": "Error Type",
                        "type": "string"
                    }
                }
            },
            "country_model": {
                "title": "country_model",
                "type": "object",
                "properties": {
                    "cioc": {
                        "title": "Cioc",
                        "type": "string"
                    },
                    "regionalBlocs": {
                        "title": "Regionalblocs",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/regionalBlocs"
                        }
                    },
                    "flag": {
                        "title": "Flag",
                        "maxLength": 65536,
                        "minLength": 1,
                        "type": "string",
                        "format": "uri"
                    },
                    "translations": {
                        "title": "Translations",
                        "type": "object"
                    },
                    "languages": {
                        "title": "Languages",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/languages"
                        }
                    },
                    "currencies": {
                        "title": "Currencies",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/currencies"
                        }
                    },
                    "numericCode": {
                        "title": "Numericcode",
                        "type": "string"
                    },
                    "nativeName": {
                        "title": "Nativename",
                        "type": "string"
                    },
                    "borders": {
                        "title": "Borders",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "timezones": {
                        "title": "Timezones",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "gini": {
                        "title": "Gini",
                        "type": "number"
                    },
                    "area": {
                        "title": "Area",
                        "type": "integer"
                    },
                    "demonym": {
                        "title": "Demonym",
                        "type": "string"
                    },
                    "latlng": {
                        "title": "Latlng",
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    },
                    "population": {
                        "title": "Population",
                        "type": "integer"
                    },
                    "subregion": {
                        "title": "Subregion",
                        "type": "string"
                    },
                    "region": {
                        "title": "Region",
                        "type": "string"
                    },
                    "altSpellings": {
                        "title": "Altspellings",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "capital": {
                        "title": "Capital",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "topLevelDomain": {
                        "title": "Topleveldomain",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "alpha2Code": {
                        "title": "Alpha2Code",
                        "type": "string"
                    },
                    "alpha3Code": {
                        "title": "Alpha3Code",
                        "type": "string"
                    },
                    "callingCodes": {
                        "title": "Callingcodes",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }
            },
            "currencies": {
                "title": "currencies",
                "type": "object",
                "properties": {
                    "code": {
                        "title": "Code",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "symbol": {
                        "title": "Symbol",
                        "type": "string"
                    }
                }
            },
            "format_types": {
                "title": "format_types",
                "enum": [
                    "json",
                    "csv"
                ],
                "type": "string",
                "description": "An enumeration."
            },
            "languages": {
                "title": "languages",
                "type": "object",
                "properties": {
                    "iso639_1": {
                        "title": "Iso639 1",
                        "type": "string"
                    },
                    "iso639_2": {
                        "title": "Iso639 2",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "nativeName": {
                        "title": "Nativename",
                        "type": "string"
                    }
                }
            },
            "regionalBlocs": {
                "title": "regionalBlocs",
                "type": "object",
                "properties": {
                    "acronym": {
                        "title": "Acronym",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "otherAcronyms": {
                        "title": "Otheracronyms",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "otherNames": {
                        "title": "Othernames",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "search_model": {
                "title": "search_model",
                "type": "object",
                "properties": {
                    "query": {
                        "$ref": "#/components/schemas/search_query"
                    },
                    "size": {
                        "title": "Size",
                        "type": "integer"
                    },
                    "track_total_hits": {
                        "title": "Track Total Hits",
                        "type": "boolean"
                    }
                }
            },
            "search_query": {
                "title": "search_query",
                "type": "object",
                "properties": {
                    "match": {
                        "title": "Match",
                        "type": "object"
                    },
                    "range": {
                        "title": "Range",
                        "type": "object"
                    }
                }
            }
        },
        "securitySchemes": {
            "HTTPBasic": {
                "type": "http",
                "scheme": "basic"
            }
        }
    },
    "tags": [{
            "name": "🎊 Cluster Basics"
        },
        {
            "name": "🚀 Create"
        },
        {
            "name": "🎉 Read"
        },
        {
            "name": "🥳 Update"
        },
        {
            "name": "🦄 Delete"
        }
    ]
}