{
    "openapi": "3.0.2",
    "info": {
        "title": "Elasticsearch Basics",
        "description": "This Swagger UI page runs throught the basic Elasticsearch API end points. It is intended to be used as a first introduction for anybody looking to pick upsome elasticsearch knowledge. \n\nThe Swagger UI page runs through the basics of index management then runs through all the basic `CRUD` operations. Sample payloads and responses have been provided for each endpoint to assist in the learning processing. Every CRUD end point requires that you specify an index name as a path parameter.\n\nFor instructions on how to setup a elasticsearch cluster and connect up this Swagger UI page - head over to the [Swarmee Blog](https://www.swarmee.net/blog/2021-09-02-Elasticsearch-Foundational-Training/).",
        "version": "1.0"
    },
    "servers": [{
        "url": "https://localhost"
    }],
    "paths": {
        "/_cluster/health": {
            "get": {
                "tags": [
                    "🎊 Cluster Basics"
                ],
                "summary": "Retrieve Cluster Health",
                "description": "Retrieve Cluster Health \n\nIdeally your cluster is green (which means no unreplicated shards) \n\nYellow means you have some unreplicated shards - if you create an index it may by default have mulitple shards.",
                "operationId": "retrieve_cluster_health__cluster_health_get",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "examples": {
                                    "JSON Response": {
                                        "summary": "JSON Response",
                                        "value": [{
                                            "cluster_name": "swarmee",
                                            "status": "yellow",
                                            "timed_out": false,
                                            "number_of_nodes": 1,
                                            "number_of_data_nodes": 1,
                                            "discovered_master": true,
                                            "active_primary_shards": 1,
                                            "active_shards": 1,
                                            "relocating_shards": 0,
                                            "initializing_shards": 0,
                                            "unassigned_shards": 2,
                                            "delayed_unassigned_shards": 0,
                                            "number_of_pending_tasks": 0,
                                            "number_of_in_flight_fetch": 0,
                                            "task_max_waiting_in_queue_millis": 0,
                                            "active_shards_percent_as_number": 33.33333333333333
                                        }]
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "HTTPBasic": []
                }]
            }
        },
        "/_cat/indices": {
            "get": {
                "tags": [
                    "✨ Index Operations"
                ],
                "summary": "List Indices",
                "description": "`cat` stands for Compact and Aligned Text - there are many elasticserch endpoints under `_cat` \n\nThese endpoints are meant for humans to read as the text is neatly aligned in columns. \n\nHowever they have evolved to have a format parameter so you can get `json` back from them also.\n\nThis `cat` endpoint list indices and provides their state \n\nThe **v** parameter toggles the column headings on and off in the column view.  ",
                "operationId": "list_indices__cat_indices_get",
                "parameters": [{
                        "required": false,
                        "schema": {
                            "title": "V",
                            "type": "boolean"
                        },
                        "name": "v",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "allOf": [{
                                "$ref": "#/components/schemas/format_types"
                            }],
                            "default": "column"
                        },
                        "name": "format",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "examples": {
                                    "JSON Response": {
                                        "summary": "JSON Response",
                                        "value": [{
                                                "health": "green",
                                                "status": "open",
                                                "index": "country",
                                                "uuid": "jNi87tzhRgyDCnyqSeaWDQ",
                                                "pri": "1",
                                                "rep": "0",
                                                "docs.count": "0",
                                                "docs.deleted": "0",
                                                "store.size": "208b",
                                                "pri.store.size": "208b"
                                            },
                                            {
                                                "health": "green",
                                                "status": "open",
                                                "index": "test",
                                                "uuid": "Xk6o3Nv6QnqG2POSufHJaA",
                                                "pri": "1",
                                                "rep": "0",
                                                "docs.count": "0",
                                                "docs.deleted": "0",
                                                "store.size": "208b",
                                                "pri.store.size": "208b"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "HTTPBasic": []
                }]
            }
        },
        "/{index}/": {
            "get": {
                "tags": [
                    "✨ Index Operations"
                ],
                "summary": "View Index Details",
                "description": "View the aliases, mappings and settings for an index.\n\n_**Aliases**_ are similar to table views from sql land - i.e. they don't hold data - they just point to one or more indexes. \n\n_**Mappings**_ defines the type of each field and how it is indexes \n\n_**Settings**_ defines the index level configuration.   ",
                "operationId": "view_index_details__index___get",
                "parameters": [{
                    "required": true,
                    "schema": {
                        "title": "Index",
                        "type": "string"
                    },
                    "name": "index",
                    "in": "path"
                }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "examples": {
                                    "JSON Response": {
                                        "summary": "JSON Response",
                                        "value": {
                                            "country": {
                                                "aliases": {},
                                                "mappings": {},
                                                "settings": {
                                                    "index": {
                                                        "creation_date": "1631913972854",
                                                        "number_of_shards": "1",
                                                        "number_of_replicas": "0",
                                                        "uuid": "yQ8dF5otQ5SKHyWQYlr9Jw",
                                                        "version": {
                                                            "created": "135217827"
                                                        },
                                                        "provided_name": "country"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "HTTPBasic": []
                }]
            },
            "put": {
                "tags": [
                    "✨ Index Operations"
                ],
                "summary": "Create Index",
                "description": "Create an empty index in elasticsearch with a predefined configuration. \n\nOver time you will probably want to look at index templates - however you need to understand the fundamentals of index settings. \n\nBelow there are two example index configurations. ",
                "operationId": "create_index__index___put",
                "parameters": [{
                    "required": true,
                    "schema": {
                        "title": "Index",
                        "type": "string"
                    },
                    "name": "index",
                    "in": "path"
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "Request",
                                "type": "object"
                            },
                            "examples": {
                                "simple_index_creation": {
                                    "summary": "A simple index configuration",
                                    "description": "A **simple** index configuration. In this example we are just setting the number of shards and replicas",
                                    "value": {
                                        "settings": {
                                            "index": {
                                                "number_of_replicas": 0
                                            }
                                        }
                                    }
                                },
                                "complex_index_country": {
                                    "summary": "A more complex index configuration",
                                    "description": "A more **complex** document with many fields of different types",
                                    "value": {
                                        "settings": {
                                            "index": {
                                                "codec": "best_compression",
                                                "number_of_replicas": 0,
                                                "number_of_shards": 1,
                                                "refresh_interval": "30s"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "examples": {
                                    "JSON Response": {
                                        "summary": "JSON Response",
                                        "value": {
                                            "acknowledged": true,
                                            "shards_acknowledged": true,
                                            "index": "country"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "HTTPBasic": []
                }]
            },
            "delete": {
                "tags": [
                    "✨ Index Operations"
                ],
                "summary": "Delete Index",
                "description": "Delete an index (and all documents contained within the index)\n\nThese types of endpoints support asterisk (`*`) as a wild. \n\nThis is really helpful when you need to delete indices which have the date in the index name. E.g.; \n\n``` bash\ncurl -X 'DELETE' 'https://localhost/2020-01-*-applogs/' \n```\nBut be careful.",
                "operationId": "delete_index__index___delete",
                "parameters": [{
                    "required": true,
                    "schema": {
                        "title": "Index",
                        "type": "string"
                    },
                    "name": "index",
                    "in": "path"
                }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "examples": {
                                    "JSON Response": {
                                        "summary": "JSON Response",
                                        "value": {
                                            "acknowledged": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "HTTPBasic": []
                }]
            }
        },
        "/{index}/_settings": {
            "put": {
                "tags": [
                    "✨ Index Operations"
                ],
                "summary": "Update Index Settings",
                "description": "Update an existing indexes settings. \n\nFor example you might want to build an index with settings optimised for speed, however once its built you might want to optimise for redundancy (e.g. increasing the number of replicates), \n\n**Not** all index settings can be changed once an index is created.  ",
                "operationId": "update_index_settings__index___settings_put",
                "parameters": [{
                    "required": true,
                    "schema": {
                        "title": "Index",
                        "type": "string"
                    },
                    "name": "index",
                    "in": "path"
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "Request",
                                "type": "object"
                            },
                            "examples": {
                                "update_index_setting": {
                                    "summary": "A update to an index setting",
                                    "description": "A **simple** update index setting example",
                                    "value": {
                                        "index": {
                                            "number_of_replicas": 2
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "examples": {
                                    "JSON Response": {
                                        "summary": "JSON Response",
                                        "value": {
                                            "acknowledged": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "HTTPBasic": []
                }]
            }
        },
        "/{index}/_update/{_id}": {
            "post": {
                "tags": [
                    "🥳 Update Documents"
                ],
                "summary": "Update Document",
                "description": "Inserting a document with an existing document _id will replace the existing document - So\nif you need to replace a whole document with a existing document just use the create document \nwith `_id` end point.\nThere are two types of updates `doc` and `script`:\n\n- doc is used to add or update specific fields\n- script is used to perform more complex updates (e.g. adding an item to an existing list)",
                "operationId": "update_document__index___update___id__post",
                "parameters": [{
                        "required": true,
                        "schema": {
                            "title": "Index",
                            "type": "string"
                        },
                        "name": "index",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Documemt _id",
                            "type": "string"
                        },
                        "name": "_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "Request",
                                "type": "object"
                            },
                            "examples": {
                                "update_document_new_field": {
                                    "summary": "Add a field to a document",
                                    "description": "Add one additional field to a elasticsearch document",
                                    "value": {
                                        "doc": {
                                            "newField": "newFieldValue"
                                        }
                                    }
                                },
                                "update_document_script_remove_field": {
                                    "summary": "Remove a field from a document",
                                    "description": "Remove a field from one elasticsearch document",
                                    "value": {
                                        "script": "ctx._source.remove('newField')"
                                    }
                                },
                                "update_document_add_list": {
                                    "summary": "Add a list to a document",
                                    "description": "Add a list to an existing document",
                                    "value": {
                                        "doc": {
                                            "newList": [
                                                1,
                                                3,
                                                45,
                                                777
                                            ]
                                        }
                                    }
                                },
                                "update_document_add_item_to_list_if_not_present": {
                                    "summary": "Add an item to a list if not already present",
                                    "description": "Add an item to a list if not already present, note how the version number is not incremented and the result is `noop` when the value already exists in the list",
                                    "value": {
                                        "script": {
                                            "source": "/* first check to see if value is in the list */  if  (ctx._source.newList.contains(params.tag) != true) /* add it if not present */ {ctx._source.newList.add(params.tag)} else { ctx.op = 'none' }",
                                            "lang": "painless",
                                            "params": {
                                                "tag": 10000000000
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "examples": {
                                    "JSON Response": {
                                        "summary": "JSON Response",
                                        "value": {
                                            "_index": "country",
                                            "_type": "_doc",
                                            "_id": "UYIP9nsBc-WDXl5o2rS7",
                                            "_version": 4,
                                            "result": "updated",
                                            "_shards": {
                                                "total": 1,
                                                "successful": 1,
                                                "failed": 0
                                            },
                                            "_seq_no": 32,
                                            "_primary_term": 1
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "HTTPBasic": []
                }]
            }
        },
        "/{index}/_update_by_query": {
            "post": {
                "tags": [
                    "🥳 Update Documents"
                ],
                "summary": "Update By Query",
                "description": "Delete all documents that match a query. All of the powerful search language can be used here\nto identify what needs to be deleted. Depdending on the number of documents to be deleted you \nmay choose to submit this request synchronously or asynchronously based on the `wait_for_completion`\nflag. \n\nIf you choose asynchronously you are provided a `task_id` that you can use to manage the request\nat a later point.  ",
                "operationId": "update_by_query__index___update_by_query_post",
                "parameters": [{
                        "required": true,
                        "schema": {
                            "title": "Index",
                            "type": "string"
                        },
                        "name": "index",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Wait For Completion",
                            "type": "boolean",
                            "default": false,
                            "desription": "submit asynchronously flag"
                        },
                        "name": "wait_for_completion",
                        "in": "query"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/update_operations__schema__search_model"
                            },
                            "examples": {
                                "update_document_by_query_add_new_field": {
                                    "summary": "Add a field to documents that meet query",
                                    "description": "Add one additional field to all documents that meet the query",
                                    "value": {
                                        "script": {
                                            "source": "ctx._source.bulkAddedField = 'updateByQuery'",
                                            "lang": "painless"
                                        },
                                        "query": {
                                            "match": {
                                                "subregion": "Asia"
                                            }
                                        }
                                    }
                                },
                                "update_document_by_query_remove_new_field": {
                                    "summary": "Remove a field from a document based on a query",
                                    "description": "Remove one  field to all documents that meet the query",
                                    "value": {
                                        "script": {
                                            "source": "ctx._source.remove('bulkAddedField')",
                                            "lang": "painless"
                                        },
                                        "query": {
                                            "match": {
                                                "subregion": "Asia"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "examples": {
                                    "JSON Response(sync)": {
                                        "summary": "JSON Response(sync)",
                                        "value": {
                                            "took": 139,
                                            "timed_out": false,
                                            "total": 3,
                                            "updated": 3,
                                            "deleted": 0,
                                            "batches": 1,
                                            "version_conflicts": 0,
                                            "noops": 0,
                                            "retries": {
                                                "bulk": 0,
                                                "search": 0
                                            },
                                            "throttled_millis": 0,
                                            "requests_per_second": -1,
                                            "throttled_until_millis": 0,
                                            "failures": []
                                        }
                                    },
                                    "JSON Response(async)": {
                                        "summary": "JSON Response(async)",
                                        "value": {
                                            "task": "houRpFPvSzSZe_TwFBhyFg:4125"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "HTTPBasic": []
                }]
            }
        },
        "/{index}/_doc/{_id}": {
            "get": {
                "tags": [
                    "🎉 Retrieve Documents"
                ],
                "summary": "Retrieve Document By Id",
                "description": "This end point simply retrieves a document based on the provided `_id`. \n\nNote the structure of the document returned:\n- At the top level we have various meta data about the document (e.g. `index` and `version`). \n\n- The original document is nested in a field called `_source`. ",
                "operationId": "retrieve_document_by_id__index___doc___id__get",
                "parameters": [{
                        "required": true,
                        "schema": {
                            "title": "Index",
                            "type": "string"
                        },
                        "name": "index",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": " Id",
                            "type": "string"
                        },
                        "name": "_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "examples": {
                                    "JSON Response": {
                                        "summary": "JSON Response",
                                        "value": {
                                            "_index": "country",
                                            "_type": "_doc",
                                            "_id": "1",
                                            "_version": 4,
                                            "_seq_no": 3,
                                            "_primary_term": 1,
                                            "found": true,
                                            "_source": {
                                                "name": "Afghanistan",
                                                "alpha2Code": "AF",
                                                "capital": "Kabul",
                                                "region": "Asia",
                                                "subregion": "Southern Asia",
                                                "area": 652230
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "HTTPBasic": []
                }]
            },
            "post": {
                "tags": [
                    "🚀 Create Documents"
                ],
                "summary": "Create Document With Id",
                "description": "Store a document into elasticsearch while specifying an `_id` for the record.\n\nIf the index to store the document does not already exist it will be created \nwith the default settings and mapping parameters applied. \n\nIf the index and `_id` already exist then the document will be replaced. \n\nPlease see how the sample response differs (i.e. the `result` and `_version` fields)",
                "operationId": "create_document_with_id__index___doc___id__post",
                "parameters": [{
                        "required": true,
                        "schema": {
                            "title": "Index",
                            "type": "string"
                        },
                        "name": "index",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": " Id",
                            "type": "string"
                        },
                        "name": "_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/country_model"
                            },
                            "examples": {
                                "simple_single_country": {
                                    "summary": "A simple document",
                                    "description": "A **simple** document with only a few fields",
                                    "value": {
                                        "name": "Afghanistan",
                                        "alpha2Code": "AF",
                                        "capital": "Kabul",
                                        "region": "Asia",
                                        "subregion": "Southern Asia",
                                        "area": 652230
                                    }
                                },
                                "complex_single_country": {
                                    "summary": "A complex document",
                                    "description": "A `complex` document with many fields of different types",
                                    "value": {
                                        "name": "Afghanistan",
                                        "topLevelDomain": [
                                            ".af"
                                        ],
                                        "alpha2Code": "AF",
                                        "alpha3Code": "AFG",
                                        "callingCodes": [
                                            "93"
                                        ],
                                        "capital": "Kabul",
                                        "altSpellings": [
                                            "AF",
                                            "Afġānistān"
                                        ],
                                        "region": "Asia",
                                        "subregion": "Southern Asia",
                                        "population": 27657145,
                                        "latlng": [
                                            33,
                                            65
                                        ],
                                        "demonym": "Afghan",
                                        "area": 652230,
                                        "gini": 27.8,
                                        "timezones": [
                                            "UTC+04:30"
                                        ],
                                        "borders": [
                                            "IRN",
                                            "PAK",
                                            "TKM",
                                            "UZB",
                                            "TJK",
                                            "CHN"
                                        ],
                                        "nativeName": "افغانستان",
                                        "numericCode": "004",
                                        "currencies": [{
                                            "code": "AFN",
                                            "name": "Afghan afghani",
                                            "symbol": "؋"
                                        }],
                                        "languages": [{
                                                "iso639_1": "ps",
                                                "iso639_2": "pus",
                                                "name": "Pashto",
                                                "nativeName": "پښتو"
                                            },
                                            {
                                                "iso639_1": "uz",
                                                "iso639_2": "uzb",
                                                "name": "Uzbek",
                                                "nativeName": "Oʻzbek"
                                            },
                                            {
                                                "iso639_1": "tk",
                                                "iso639_2": "tuk",
                                                "name": "Turkmen",
                                                "nativeName": "Türkmen"
                                            }
                                        ],
                                        "translations": {
                                            "de": "Afghanistan",
                                            "es": "Afganistán",
                                            "fr": "Afghanistan",
                                            "ja": "アフガニスタン",
                                            "it": "Afghanistan",
                                            "br": "Afeganistão",
                                            "pt": "Afeganistão",
                                            "nl": "Afghanistan",
                                            "hr": "Afganistan",
                                            "fa": "افغانستان"
                                        },
                                        "flag": "https://restcountries.eu/data/afg.svg",
                                        "regionalBlocs": [{
                                            "acronym": "SAARC",
                                            "name": "South Asian Association for Regional Cooperation",
                                            "otherAcronyms": [],
                                            "otherNames": []
                                        }],
                                        "cioc": "AFG"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "examples": {
                                    "JSON Response(Version 1)": {
                                        "summary": "JSON Response(Version 1)",
                                        "value": {
                                            "_index": "country",
                                            "_type": "_doc",
                                            "_id": "1",
                                            "_version": 1,
                                            "result": "created",
                                            "_shards": {
                                                "total": 1,
                                                "successful": 1,
                                                "failed": 0
                                            },
                                            "_seq_no": 0,
                                            "_primary_term": 1
                                        }
                                    },
                                    "JSON Response(Version 2)": {
                                        "summary": "JSON Response(Version 2)",
                                        "value": {
                                            "_index": "country",
                                            "_type": "_doc",
                                            "_id": "1",
                                            "_version": 2,
                                            "result": "updated",
                                            "_shards": {
                                                "total": 1,
                                                "successful": 1,
                                                "failed": 0
                                            },
                                            "_seq_no": 5,
                                            "_primary_term": 1
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "HTTPBasic": []
                }]
            },
            "delete": {
                "tags": [
                    "🦄 Delete Documents"
                ],
                "summary": "Delete Document",
                "description": "Delete an individual document based on the document `_id`.",
                "operationId": "delete_document__index___doc___id__delete",
                "parameters": [{
                        "required": true,
                        "schema": {
                            "title": "Index",
                            "type": "string"
                        },
                        "name": "index",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": " Id",
                            "type": "string"
                        },
                        "name": "_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "JSON Response": {
                                        "summary": "JSON Response",
                                        "value": {
                                            "_index": "country",
                                            "_type": "_doc",
                                            "_id": "1",
                                            "_version": 5,
                                            "result": "deleted",
                                            "_shards": {
                                                "total": 1,
                                                "successful": 1,
                                                "failed": 0
                                            },
                                            "_seq_no": 13,
                                            "_primary_term": 1
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "HTTPBasic": []
                }]
            }
        },
        "/{index}/_doc": {
            "post": {
                "tags": [
                    "🚀 Create Documents"
                ],
                "summary": "Create Document Without Id",
                "description": "Store a document into elasticsearch, the `_id` for the record will be \ngenerated by elasticsearch. \n\nIf the index to store the document does not already exist it will be created \nwith the default settings and mappings. \n\nThe HTTP response code is 201 for this request. ",
                "operationId": "create_document_without_id__index___doc_post",
                "parameters": [{
                    "required": true,
                    "schema": {
                        "title": "Index",
                        "type": "string"
                    },
                    "name": "index",
                    "in": "path"
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/country_model"
                            },
                            "examples": {
                                "simple_single_country": {
                                    "summary": "A simple document",
                                    "description": "A **simple** document with only a few fields",
                                    "value": {
                                        "name": "Afghanistan",
                                        "alpha2Code": "AF",
                                        "capital": "Kabul",
                                        "region": "Asia",
                                        "subregion": "Southern Asia",
                                        "area": 652230
                                    }
                                },
                                "complex_single_country": {
                                    "summary": "A complex document",
                                    "description": "A `complex` document with many fields of different types",
                                    "value": {
                                        "name": "Afghanistan",
                                        "topLevelDomain": [
                                            ".af"
                                        ],
                                        "alpha2Code": "AF",
                                        "alpha3Code": "AFG",
                                        "callingCodes": [
                                            "93"
                                        ],
                                        "capital": "Kabul",
                                        "altSpellings": [
                                            "AF",
                                            "Afġānistān"
                                        ],
                                        "region": "Asia",
                                        "subregion": "Southern Asia",
                                        "population": 27657145,
                                        "latlng": [
                                            33,
                                            65
                                        ],
                                        "demonym": "Afghan",
                                        "area": 652230,
                                        "gini": 27.8,
                                        "timezones": [
                                            "UTC+04:30"
                                        ],
                                        "borders": [
                                            "IRN",
                                            "PAK",
                                            "TKM",
                                            "UZB",
                                            "TJK",
                                            "CHN"
                                        ],
                                        "nativeName": "افغانستان",
                                        "numericCode": "004",
                                        "currencies": [{
                                            "code": "AFN",
                                            "name": "Afghan afghani",
                                            "symbol": "؋"
                                        }],
                                        "languages": [{
                                                "iso639_1": "ps",
                                                "iso639_2": "pus",
                                                "name": "Pashto",
                                                "nativeName": "پښتو"
                                            },
                                            {
                                                "iso639_1": "uz",
                                                "iso639_2": "uzb",
                                                "name": "Uzbek",
                                                "nativeName": "Oʻzbek"
                                            },
                                            {
                                                "iso639_1": "tk",
                                                "iso639_2": "tuk",
                                                "name": "Turkmen",
                                                "nativeName": "Türkmen"
                                            }
                                        ],
                                        "translations": {
                                            "de": "Afghanistan",
                                            "es": "Afganistán",
                                            "fr": "Afghanistan",
                                            "ja": "アフガニスタン",
                                            "it": "Afghanistan",
                                            "br": "Afeganistão",
                                            "pt": "Afeganistão",
                                            "nl": "Afghanistan",
                                            "hr": "Afganistan",
                                            "fa": "افغانستان"
                                        },
                                        "flag": "https://restcountries.eu/data/afg.svg",
                                        "regionalBlocs": [{
                                            "acronym": "SAARC",
                                            "name": "South Asian Association for Regional Cooperation",
                                            "otherAcronyms": [],
                                            "otherNames": []
                                        }],
                                        "cioc": "AFG"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "examples": {
                                    "JSON Response": {
                                        "summary": "JSON Response",
                                        "value": {
                                            "_index": "country",
                                            "_type": "_doc",
                                            "_id": "SoK49XsBc-WDXl5oTbQG",
                                            "_version": 1,
                                            "result": "created",
                                            "_shards": {
                                                "total": 1,
                                                "successful": 1,
                                                "failed": 0
                                            },
                                            "_seq_no": 6,
                                            "_primary_term": 1
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "HTTPBasic": []
                }]
            }
        },
        "/{index}/_search": {
            "post": {
                "tags": [
                    "🎉 Retrieve Documents"
                ],
                "summary": "Retrieve Documents By Search",
                "description": "This is the most feature rich endpoint in elasticsearch - coming from sql the searches that you can\nperform will **blown your mind**. \n\nWe will just cover the basics here now - but lots more to come on this. \nA number of example query types have been provided. \n\nThis end point can also been used to sample some documents when submitted without a request body \n(i.e. with no search parameters). By default only ten documents will be returned. \n\nThe sample response shows illustrates the structure that will be returned. \nAt the top level we have details about the search execution (e.g. `took`, `timed_out` and shard details)\nThen we have a `hits` key which has summary details on the search (e.g. `max_score` and `total` hits)\nas well as sub `hits` key which lists the search results in score order.  ",
                "operationId": "retrieve_documents_by_search__index___search_post",
                "parameters": [{
                        "required": true,
                        "schema": {
                            "title": "Index",
                            "type": "string"
                        },
                        "name": "index",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Size",
                            "type": "integer",
                            "default": 10
                        },
                        "name": "size",
                        "in": "query"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/retrieve_operations__schema__search_model"
                            },
                            "examples": {
                                "query_string_query": {
                                    "summary": "A query string example",
                                    "value": {
                                        "query": {
                                            "query_string": {
                                                "query": "af"
                                            }
                                        }
                                    }
                                },
                                "match_query": {
                                    "summary": "A match query example",
                                    "description": "A **normal** item works correctly.",
                                    "value": {
                                        "query": {
                                            "match": {
                                                "region": "asia"
                                            }
                                        }
                                    }
                                },
                                "range_query": {
                                    "summary": "A range query example",
                                    "description": "Basically return all country documents with an area of greater than or equal to `1`",
                                    "value": {
                                        "query": {
                                            "range": {
                                                "area": {
                                                    "gte": 1
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "examples": {
                                    "JSON Response": {
                                        "summary": "JSON Response",
                                        "value": {
                                            "took": 26,
                                            "timed_out": false,
                                            "_shards": {
                                                "total": 1,
                                                "successful": 1,
                                                "skipped": 0,
                                                "failed": 0
                                            },
                                            "hits": {
                                                "total": {
                                                    "value": 3,
                                                    "relation": "eq"
                                                },
                                                "max_score": 0.036367644,
                                                "hits": [{
                                                        "_index": "country",
                                                        "_type": "_doc",
                                                        "_id": "1",
                                                        "_score": 0.036367644,
                                                        "_source": {
                                                            "name": "Afghanistan",
                                                            "alpha2Code": "AF",
                                                            "capital": "Kabul",
                                                            "region": "Asia",
                                                            "subregion": "Southern Asia",
                                                            "area": 652230
                                                        }
                                                    },
                                                    {
                                                        "_index": "country",
                                                        "_type": "_doc",
                                                        "_id": "5",
                                                        "_score": 0.036367644,
                                                        "_source": {
                                                            "name": "Afghanistan",
                                                            "alpha2Code": "AF",
                                                            "capital": "Kabul",
                                                            "region": "Asia",
                                                            "subregion": "Southern Asia",
                                                            "area": 652230
                                                        }
                                                    },
                                                    {
                                                        "_index": "country",
                                                        "_type": "_doc",
                                                        "_id": "UIK69XsBc-WDXl5oS7Q1",
                                                        "_score": 0.036367644,
                                                        "_source": {
                                                            "name": "Afghanistan",
                                                            "alpha2Code": "AF",
                                                            "capital": "Kabul",
                                                            "region": "Asia",
                                                            "subregion": "Southern Asia",
                                                            "area": 652230
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "HTTPBasic": []
                }]
            }
        },
        "/{index}/_delete_by_query": {
            "post": {
                "tags": [
                    "🦄 Delete Documents"
                ],
                "summary": "Delete By Query",
                "description": "Delete all documents that match a query. All of the powerful search language can be used here\nto identify what needs to be deleted. Depdending on the number of documents to be deleted you \nmay choose to submit this request synchronously or asynchronously based on the `wait_for_completion`\nflag. \n\nIf you choose asynchronously you are provided a `task_id` that you can use to manage the request\nat a later point.  ",
                "operationId": "delete_by_query__index___delete_by_query_post",
                "parameters": [{
                        "required": true,
                        "schema": {
                            "title": "Index",
                            "type": "string"
                        },
                        "name": "index",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Wait For Completion",
                            "type": "boolean",
                            "default": false,
                            "desription": "submit asynchronously flag"
                        },
                        "name": "wait_for_completion",
                        "in": "query"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/search_operations__schema__search_model"
                            },
                            "examples": {
                                "query_string_query": {
                                    "summary": "A query string example",
                                    "value": {
                                        "query": {
                                            "query_string": {
                                                "query": "af"
                                            }
                                        }
                                    }
                                },
                                "match_query": {
                                    "summary": "A match query example",
                                    "description": "A **normal** item works correctly.",
                                    "value": {
                                        "query": {
                                            "match": {
                                                "region": "asia"
                                            }
                                        }
                                    }
                                },
                                "range_query": {
                                    "summary": "A range query example",
                                    "description": "Basically return all country documents with an area of greater than or equal to `1`",
                                    "value": {
                                        "query": {
                                            "range": {
                                                "area": {
                                                    "gte": 1
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "examples": {
                                    "JSON Response(sync)": {
                                        "summary": "JSON Response(sync)",
                                        "value": {
                                            "took": 67,
                                            "timed_out": false,
                                            "total": 8,
                                            "deleted": 8,
                                            "batches": 1,
                                            "version_conflicts": 0,
                                            "noops": 0,
                                            "retries": {
                                                "bulk": 0,
                                                "search": 0
                                            },
                                            "throttled_millis": 0,
                                            "requests_per_second": -1,
                                            "throttled_until_millis": 0,
                                            "failures": []
                                        }
                                    },
                                    "JSON Response(async)": {
                                        "summary": "JSON Response(async)",
                                        "value": {
                                            "task": "houRpFPvSzSZe_TwFBhyFg:4125"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "HTTPBasic": []
                }]
            }
        }
    },
    "components": {
        "schemas": {
            "HTTPValidationError": {
                "title": "HTTPValidationError",
                "type": "object",
                "properties": {
                    "detail": {
                        "title": "Detail",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        }
                    }
                }
            },
            "ValidationError": {
                "title": "ValidationError",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "loc": {
                        "title": "Location",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "msg": {
                        "title": "Message",
                        "type": "string"
                    },
                    "type": {
                        "title": "Error Type",
                        "type": "string"
                    }
                }
            },
            "country_model": {
                "title": "country_model",
                "type": "object",
                "properties": {
                    "cioc": {
                        "title": "Cioc",
                        "type": "string"
                    },
                    "regionalBlocs": {
                        "title": "Regionalblocs",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/regionalBlocs"
                        }
                    },
                    "flag": {
                        "title": "Flag",
                        "maxLength": 65536,
                        "minLength": 1,
                        "type": "string",
                        "format": "uri"
                    },
                    "translations": {
                        "title": "Translations",
                        "type": "object"
                    },
                    "languages": {
                        "title": "Languages",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/languages"
                        }
                    },
                    "currencies": {
                        "title": "Currencies",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/currencies"
                        }
                    },
                    "numericCode": {
                        "title": "Numericcode",
                        "type": "string"
                    },
                    "nativeName": {
                        "title": "Nativename",
                        "type": "string"
                    },
                    "borders": {
                        "title": "Borders",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "timezones": {
                        "title": "Timezones",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "gini": {
                        "title": "Gini",
                        "type": "number"
                    },
                    "area": {
                        "title": "Area",
                        "type": "integer"
                    },
                    "demonym": {
                        "title": "Demonym",
                        "type": "string"
                    },
                    "latlng": {
                        "title": "Latlng",
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    },
                    "population": {
                        "title": "Population",
                        "type": "integer"
                    },
                    "subregion": {
                        "title": "Subregion",
                        "type": "string"
                    },
                    "region": {
                        "title": "Region",
                        "type": "string"
                    },
                    "altSpellings": {
                        "title": "Altspellings",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "capital": {
                        "title": "Capital",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "topLevelDomain": {
                        "title": "Topleveldomain",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "alpha2Code": {
                        "title": "Alpha2Code",
                        "type": "string"
                    },
                    "alpha3Code": {
                        "title": "Alpha3Code",
                        "type": "string"
                    },
                    "callingCodes": {
                        "title": "Callingcodes",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }
            },
            "currencies": {
                "title": "currencies",
                "type": "object",
                "properties": {
                    "code": {
                        "title": "Code",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "symbol": {
                        "title": "Symbol",
                        "type": "string"
                    }
                }
            },
            "format_types": {
                "title": "format_types",
                "enum": [
                    "json",
                    "column"
                ],
                "type": "string",
                "description": "An enumeration."
            },
            "languages": {
                "title": "languages",
                "type": "object",
                "properties": {
                    "iso639_1": {
                        "title": "Iso639 1",
                        "type": "string"
                    },
                    "iso639_2": {
                        "title": "Iso639 2",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "nativeName": {
                        "title": "Nativename",
                        "type": "string"
                    }
                }
            },
            "regionalBlocs": {
                "title": "regionalBlocs",
                "type": "object",
                "properties": {
                    "acronym": {
                        "title": "Acronym",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "otherAcronyms": {
                        "title": "Otheracronyms",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "otherNames": {
                        "title": "Othernames",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "retrieve_operations__schema__search_model": {
                "title": "search_model",
                "type": "object",
                "properties": {
                    "query": {
                        "$ref": "#/components/schemas/retrieve_operations__schema__search_query"
                    },
                    "size": {
                        "title": "Size",
                        "type": "integer"
                    },
                    "track_total_hits": {
                        "title": "Track Total Hits",
                        "type": "boolean"
                    }
                }
            },
            "retrieve_operations__schema__search_query": {
                "title": "search_query",
                "type": "object",
                "properties": {
                    "match": {
                        "title": "Match",
                        "type": "object"
                    },
                    "range": {
                        "title": "Range",
                        "type": "object"
                    }
                }
            },
            "search_operations__schema__search_model": {
                "title": "search_model",
                "type": "object",
                "properties": {
                    "query": {
                        "$ref": "#/components/schemas/search_operations__schema__search_query"
                    },
                    "size": {
                        "title": "Size",
                        "type": "integer"
                    },
                    "track_total_hits": {
                        "title": "Track Total Hits",
                        "type": "boolean"
                    }
                }
            },
            "search_operations__schema__search_query": {
                "title": "search_query",
                "type": "object",
                "properties": {
                    "match": {
                        "title": "Match",
                        "type": "object"
                    },
                    "range": {
                        "title": "Range",
                        "type": "object"
                    }
                }
            },
            "update_operations__schema__search_model": {
                "title": "search_model",
                "type": "object",
                "properties": {
                    "query": {
                        "$ref": "#/components/schemas/update_operations__schema__search_query"
                    },
                    "size": {
                        "title": "Size",
                        "type": "integer"
                    },
                    "track_total_hits": {
                        "title": "Track Total Hits",
                        "type": "boolean"
                    }
                }
            },
            "update_operations__schema__search_query": {
                "title": "search_query",
                "type": "object",
                "properties": {
                    "match": {
                        "title": "Match",
                        "type": "object"
                    },
                    "range": {
                        "title": "Range",
                        "type": "object"
                    }
                }
            }
        },
        "securitySchemes": {
            "HTTPBasic": {
                "type": "http",
                "scheme": "basic"
            }
        }
    },
    "tags": [{
            "name": "🎊 Cluster Basics"
        },
        {
            "name": "✨ Index Operations"
        },
        {
            "name": "🚀 Create Documents"
        },
        {
            "name": "🎉 Retrieve Documents"
        },
        {
            "name": "🥳 Update Documents"
        },
        {
            "name": "🦄 Delete Documents"
        }
    ]
}